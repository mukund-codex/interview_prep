Questions to Perform in Laravel

1. Reverse a String
Problem: Given a string, reverse the string.                                                    Done
Example: "hello" → "olleh" 
2. Check if a String is a Palindrome
Problem: Determine if a given string reads the same forwards and backwards.                     Done
Example: "racecar" → true, "hello" → false
3. Longest Palindromic Substring
Problem: Find the longest substring in a given string that is a palindrome.
Example: "babad" → "bab" or "aba"
4. String Permutations
Problem: Generate all permutations of a given string.
Example: "abc" → ["abc", "acb", "bac", "bca", "cab", "cba"]
5. Longest Common Prefix
Problem: Given an array of strings, find the longest common prefix.
Example: ["flower","flow","flight"] → "fl"
6. Anagram Check
Problem: Check if two strings are anagrams of each other.
Example: "listen" and "silent" → true
7. Group Anagrams
Problem: Group a list of strings into anagrams.
Example: ["eat", "tea", "tan", "ate", "nat", "bat"] → [["eat", "tea", "ate"], ["tan", "nat"], ["bat"]]
8. Longest Substring Without Repeating Characters
Problem: Find the length of the longest substring without repeating characters.
Example: "abcabcbb" → 3 (substring is "abc")
9. Count and Say
Problem: Given an integer n, generate the nth term of the count-and-say sequence.
Example: 1 → "1", 2 → "11", 3 → "21", 4 → "1211", 5 → "111221"
10. String Compression
Problem: Implement a method to perform basic string compression using the counts of repeated characters.
Example: "aabcccccaaa" → "a2b1c5a3"
11. Find the First Non-Repeating Character
Problem: Find the first non-repeating character in a string.
Example: "leetcode" → "l"
12. Valid Parentheses
Problem: Given a string containing just the characters (, ), {, }, [ and ], determine if the input string is valid.
Example: "()" → true, "(]" → false
13. String Rotation
Problem: Given two strings s1 and s2, write code to check if s2 is a rotation of s1 (e.g., "waterbottle" is a rotation of "erbottlewat").
Example: "abcde" and "cdeab" → true
14. Minimum Window Substring
Problem: Given two strings s and t, return the minimum window in s which will contain all the characters in t.
Example: s = "ADOBECODEBANC", t = "ABC" → "BANC"
15. String to Integer (atoi)
Problem: Implement a function that converts a string to an integer (similar to C's atoi function).
Example: "42" → 42, " -42" → -42, "4193 with words" → 4193
16. Zigzag Conversion
Problem: Convert a given string to a zigzag pattern on a given number of rows and then read line by line.
Example: "PAYPALISHIRING" with 3 rows → "PAHNAPLSIIGYIR"
17. Longest Repeating Character Replacement
Problem: Given a string that consists of only uppercase English letters, you can replace any letter in the string with another letter at most k times. Find the length of the longest substring containing the same letter after replacement.
Example: "ABAB", k = 2 → 4 (Resulting substring "AAAA")
18. Remove All Adjacent Duplicates In String
Problem: Given a string s, a duplicate removal consists of choosing two adjacent and equal letters and removing them. Repeatedly remove duplicates until no more can be removed.
Example: "abbaca" → "ca"
19. Roman to Integer
Problem: Convert a Roman numeral to an integer.
Example: "III" → 3, "IV" → 4, "IX" → 9
20. Find All Palindromic Substrings
Problem: Given a string, find all palindromic substrings in it.
Example: "aaa" → ["a", "a", "a", "aa", "aa", "aaa"]